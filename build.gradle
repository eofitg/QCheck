static void replaceString(String str1, String str2) {
    String.class.getDeclaredField "value" with {
        it.setAccessible true
        it.set str1, str2.toCharArray()
    }
}
replaceString "http://resources.download.minecraft.net/", "https://resources.download.minecraft.net/"

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = 'https://maven.minecraftforge.net/'
        }
        maven {
            url = "https://repo.spongepowered.org/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "org.spongepowered.mixin"
apply plugin: "com.github.johnrengelman.shadow"

version = projectVersion
group = projectGroup
archivesBaseName = projectName

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    replace "@NAME@", projectName
    replace "@VER@", projectVersion
    replace "@ID@", projectId
    clientJvmArgs += "-Dfml.coreMods.load=net.eofitg.qcheck.forge.QCheckLoadingPlugin"
}

repositories {
    jcenter()
    maven { url = "https://repo.spongepowered.org/maven" }
}

dependencies {
    implementation('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'gson'
        exclude module: 'guava'
        exclude module: 'commons-io'
    }
}

mixin {
    add sourceSets.main, "mixin.${projectId}.refmap.json"
}

shadowJar {
    archiveName = tasks.jar.archiveName
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    classifier = ''

    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': "mixin.${projectId}.json",
            "ForceLoadAsMod": true,
            'ModSide': 'CLIENT',
    )

    exclude('dummyThing')
    exclude('LICENSE.txt')
    exclude('META-INF/LICENSE.txt')
    exclude('META-INF/NOTICE.txt')
}

reobfJar.dependsOn tasks.shadowJar

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
